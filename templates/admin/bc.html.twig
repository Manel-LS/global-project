{% extends 'base.html.twig' %}
{% block body %}
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Choisir une Base de Données</title>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">

<body class="inner_page tables_page">
   <div class="full_container">
      <div class="inner_container">
         {% include 'components/sidebar.html.twig' %}
         <div id="content">
            {% include 'components/topbar.html.twig' %}
            <div class="midde_cont">
               <div class="container-fluid">
                  <div class="row column_title">
                     <div class="col-md-12">
                        <div class="page_title">
                           <h1>Liste des bons de commande</h1>
                        </div>
                     </div>
                  </div>

                  
                  <div class="col-md-12">
                     <div class="card shadow-sm">
                        <div class="card-header text-white">
                           <h5 class="mb-0">Filtrer</h5>
                        </div>
                        <div class="card-body">
                           <form class="row g-3">
                              <div id="clients-data" class="col-md-12" data-clients="{{ clientsData }}">
                                 <div class="row align-items-center">
                                    <div class="col-md-4 d-flex align-items-center">
                                       <label for="filterNom" class="form-label mb-0 me-2">Client</label>
                                       <select id="filterNom" class="form-select flex-grow-1">
                                          <option value="" selected>Choisir un client</option>
                                          {% for client in clients %}
                                          <option value="{{ client.code }}">{{ client.libelle }}</option>
                                          {% endfor %}
                                       </select>
                                    </div>

                                    <div class="col-md-3 d-flex align-items-center">
                                       <label for="filterDate" class="form-label mb-0 me-2">Date</label>
                                       <input type="date" id="filterDate" class="form-control">
                                    </div>
                                 

                                    <div class="col-md-2 d-flex align-items-center justify-content-end">
                                       <button id="resetFilters" class="btn btn-secondary">Réinitialiser</button>
                                    </div>
                                 </div>

                                
                              </div>
                           </form>
                           <div id="message-container" class="mt-3 text-danger"></div>
                        </div>
                     </div>
                  </div>

                  <!-- Tab Bar start -->

                  <div class="col-md-12" style="margin-top:2rem;">
                     <div class="msg_list_main">
                        <div class="row">
                           <div class="card-body table-border-style">
                              <div class="table-responsive">
                                 <table id="tableInovices" class="table table-hover display" style="width:100%">
                                    <thead>
                                       <tr>
                                          <th>Ref</th>
                                          <th style="display:none">code client</th>
                                          <th>Client</th>
                                          <th>Date de création</th>
                                          <th>status</th>
                                          <th>Action</th>

                                       </tr>
                                    </thead>
                                    <tbody>
                                       {% for nummvt, lignes in inovices %}
                                       {% set firstLigne = lignes[0] %}
                                       <tr>
                                          <td>{{ firstLigne.nummvt }}</td>
                                          <td style="display: none">{{ firstLigne.codetrs }}</td>
                                          <td>{{ firstLigne.libtrs }}</td>
                                          <td>{{ firstLigne.datemvt|date('d/m/Y') }}</td>
                                          <td><span class="badge badge-facture status-pending">En
                                                attente</span>
                                          </td>
                                          <td>
                                             <a class="btn cur-p btn-warning btn-sm"
                                                href="{{ path('bon_de_commandes_details', {'nummvt': firstLigne.nummvt}) }}">
                                                <i class="fa fa-eye"></i>
                                             </a>
                                          </td>
                                       </tr>
                                       {% else %}
                                       <p class="text-center">Aucune bon de commande disponible.</p>
                                       {% endfor %}
                                    </tbody>
                                 </table>

                              </div>
                           </div>


                        </div>


                        </ul>
                     </div>



                     <!-- Tab Bar end -->

                  </div>
                  <!-- row -->

                  <!-- end row -->
               </div>

            </div>
            <!-- end dashboard inner -->
         </div>

         <!-- end dashboard inner -->
      </div>
   </div>
   </div>

   <script>
      document.addEventListener('DOMContentLoaded', function () {
         const tbody = document.getElementById('factures-list');
         const noFacturesMessage = document.getElementById('no-products-message');
         let dataTable;

         initializeDataTable();
         setupFilters();

         function initializeDataTable() {
            if ($.fn.DataTable.isDataTable('#tableInovices')) {
               $('#tableInovices').DataTable().destroy();
            }

            dataTable = $('#tableInovices').DataTable({
               paging: true,
               searching: true,
               info: true,
               language: {
                  sEmptyTable: "Aucune donnée disponible dans le tableau",
                  sInfo: "Affichage de _START_ à _END_ sur _TOTAL_ entrées",
                  sInfoEmpty: "Affichage de 0 à 0 sur 0 entrées",
                  sInfoFiltered: "(filtré de _MAX_ entrées au total)",
                  sLengthMenu: "Afficher _MENU_ entrées",
                  sLoadingRecords: "Chargement...",
                  sProcessing: "Traitement...",
                  sSearch: "Rechercher :",
                  sZeroRecords: "Aucun enregistrement correspondant trouvé",
                  oPaginate: {
                     sFirst: "Premier",
                     sLast: "Dernier",
                     sNext: "Suivant",
                     sPrevious: "Précédent"
                  }
               }
            });
         }

         function setupFilters() {
            const filterNom = $('#filterNom');
            const filterDate = document.getElementById('filterDate');
            const resetFilters = document.getElementById('resetFilters');
         
            filterNom.on('change', function () {
               const selectedValue = this.value;
               console.log('Filtering by client:', selectedValue);
               dataTable.column(1).search(selectedValue).draw();
            });

            filterDate.addEventListener('change', function () {
               if (this.value) {
                  const parts = this.value.split('-');
                  const formattedDate = parts[2] + '/' + parts[1] + '/' + parts[0];
                  console.log('Filter by date:', formattedDate);
                  dataTable.column(3).search(formattedDate).draw();
               } else {
                  console.log('Clear date filter');
                  dataTable.column(3).search('').draw();
               }
            });

            resetFilters.addEventListener('click', function (e) {
               e.preventDefault();
               filterNom.val('').trigger('change');
               filterDate.value = '';
            });
         }
         $('#filterNom').select2({
            placeholder: "Choisir un client",  
            allowClear: true
         });

      });

   </script>
</body>
{% endblock %}