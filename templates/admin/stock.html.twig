{% extends 'base.html.twig' %}

{% block content %}

 
               <div class="container-fluid">
                  <div class="row column_title">
                     <div class="col-md-12">
                        <div class="page_title">
                         </div>
                     </div>
                  </div>

                  <div class="col-md-12">
                     <div class="card shadow-sm">
                        <div class="card-header text-white">
                           <h5 class="mb-0">Filtrer</h5>
                        </div>
                        <div class="card-body">
                           <form class="row g-3">

    <!-- Bloc des inputs (gauche) -->
    <div class="col-md-10">
        <!-- Dépôt -->
        <div class="mb-3">
            <label for="filterCodeRep" class="form-label">Dépôt</label>
            <div class="row g-2">
                <div class="col-md-6">
                    <select id="filterCodeRep" class="form-select select2">
                        <option value="" disabled selected>Choisir un code dépôt</option>
                        {% for depot in depots %}
                            <option value="{{ depot.code }}" data-libelle="{{ depot.libelle }}">{{ depot.code }}</option>
                        {% endfor %}
                    </select>
                </div>
                <div class="col-md-6">
                    <select id="filterLibRep" class="form-select select2">
                        <option value="" disabled selected>Choisir un libellé dépôt</option>
                        {% for depot in depots %}
                            <option value="{{ depot.libelle }}">{{ depot.libelle }}</option>
                        {% endfor %}
                    </select>
                </div>
            </div>
        </div>

        <!-- Article -->
        <div>
            <label for="filterCodeArt" class="form-label">Article</label>
            <div class="row g-2">
                <div class="col-md-6">
                    <select id="filterCodeArt" class="form-select select2">
                        <option value="" disabled selected>Choisir un code article</option>
                        {% for article in articles %}
                            <option value="{{ article.code }}">{{ article.code }}</option>
                        {% endfor %}
                    </select>
                </div>
                <div class="col-md-6">
                    <select id="filterDesArt" class="form-select select2">
                        <option value="" disabled selected>Choisir une désignation</option>
                        {% for article in articles %}
                            <option value="{{ article.libelle }}">{{ article.libelle }}</option>
                        {% endfor %}
                    </select>
                </div>
            </div>
        </div>
    </div>

    <!-- Bloc du bouton (droite) -->
    <div class="col-md-2 d-flex justify-content-end align-items-center">
        <button id="resetFilters" class="btn btn-secondary w-100">Réinitialiser</button>
    </div>

</form>

                        </div>
                     </div>
                  </div>

                  <div class="col-md-12 mt-4">
                     <div class="card shadow-sm">
                        <div class="card-body table-responsive">
                           <table id="tableClients" class="table table-bordered table-hover display" style="width:100%">
                              <thead>
                                <tr>
                                    <th style="width: 4%; text-align: center;">Code</th>
                                    <th style="width: 17%;">Libellé Dép</th>
                                    <th style="width: 12%;">Code Article</th>
                                    <th style="width: 25%;">Désignation</th>
                                    <th style="width: 9%;">Quantité</th>
                                    <th style="width: 8%;">Unité</th>   
                                    <th style="width: 12%;">Prix HT</th>   
                                    <th style="width: 18%;">Prix TTC</th> 
                                    
                                 </tr>
                              </thead>
                              <tbody>
                                 {% for item in stock %}
                                 <tr>
                                    <td style="text-align: center; ">{{ item.codedep }}</td>
                                    <td>{{ item.libdep }}</td>
                                    <td style="text-align: center; ">{{ item.codeart }}</td>
                                    <td>{{ item.desart }}</td>
                                    <td style="text-align: center; ">{{ item.qteart }}</td>
                                    <td style="text-align: center; ">{{ item.unite }}</td>
                                    <td style="text-align: center; ">{{ item.prixvht1 }}</td>
                                    <td style="text-align: center; ">{{ item.prixvttc1 }}</td>

                                      
                                 </tr>
                                 {% else %}
                                 <tr>
                                    <td colspan="5" class="text-center">Aucun article en stock disponible.</td>
                                 </tr>
                                 {% endfor %}
                              </tbody>
                           </table>
                        </div>
                     </div>
                  </div>
               </div>
            </div>
         </div>
      </div>
   </div>
   <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
   <script src="https://cdn.datatables.net/1.10.24/js/jquery.dataTables.min.js"></script>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/flot/0.8.3/jquery.flot.min.js"></script>
   <script src="../assets/extra-libs/DataTables/datatables.min.js"></script>
   <script src="../assets/libs/perfect-scrollbar/dist/perfect-scrollbar.jquery.min.js"></script>
   <script src="../dist/js/custom.min.js"></script>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>

   <script>
      $(document).ready(function () {
          // Initialisation de Select2
          $('.select2').select2();

          // Variables pour éviter les changements récursifs
          let isChanging = false;

          // Données des dépôts et articles pour les correspondances
          var depots = {
              {% for depot in depots %}
                  "{{ depot.code }}" : "{{ depot.libelle }}",
              {% endfor %}
          };

          var articles = {
              {% for article in articles %}
                  "{{ article.code }}" : "{{ article.libelle }}",
              {% endfor %}
          };

          // Fonction pour mettre en place les filtres
          function setupFilters() {
              const filterCodeRep = $('#filterCodeRep');
              const filterLibRep = $('#filterLibRep');
              const filterCodeArt = $('#filterCodeArt');
              const filterDesArt = $('#filterDesArt');
              const resetFilters = $('#resetFilters');

              // Filtrage dynamique par Code Dép et Libellé Dép
              filterCodeRep.on('change', function () {
                  if (isChanging) return;
                  isChanging = true;

                  const selectedCodeRep = $(this).val();
                  filterLibRep.val(depots[selectedCodeRep]).trigger('change');
                  dataTable.column(0).search(selectedCodeRep).draw();

                  isChanging = false;
              });

              filterLibRep.on('change', function () {
                  if (isChanging) return;
                  isChanging = true;

                  const selectedLibRep = $(this).val();
                  for (let code in depots) {
                      if (depots[code] === selectedLibRep) {
                          filterCodeRep.val(code).trigger('change');
                          break;
                      }
                  }
                  dataTable.column(1).search(selectedLibRep).draw();

                  isChanging = false;
              });

              // Filtrage dynamique par Code Article et Désignation
              filterCodeArt.on('change', function () {
                  if (isChanging) return;
                  isChanging = true;

                  const selectedCodeArt = $(this).val();
                  filterDesArt.val(articles[selectedCodeArt]).trigger('change');
                  dataTable.column(2).search(selectedCodeArt).draw();

                  isChanging = false;
              });

              filterDesArt.on('change', function () {
                  if (isChanging) return;
                  isChanging = true;

                  const selectedDesArt = $(this).val();
                  for (let code in articles) {
                      if (articles[code] === selectedDesArt) {
                          filterCodeArt.val(code).trigger('change');
                          break;
                      }
                  }
                  dataTable.column(3).search(selectedDesArt).draw();

                  isChanging = false;
              });

              // Réinitialiser les filtres
              resetFilters.on('click', function (e) {
                  e.preventDefault();
                  filterCodeRep.val('').trigger('change');
                  filterLibRep.val('').trigger('change');
                  filterCodeArt.val('').trigger('change');
                  filterDesArt.val('').trigger('change');
                  dataTable.search('').columns().search('').draw();
              });
          }

          // Initialisation du DataTable
          var dataTable = $('#tableClients').DataTable({
              paging: true,
              searching: true,
              info: true,
              order: [], // Désactiver les flèches de tri par défaut
              language: {
                  sEmptyTable: "Aucune donnée disponible dans le tableau",
                  sInfo: "Affichage de _START_ à _END_ sur _TOTAL_ entrées",
                  sInfoEmpty: "Affichage de 0 à 0 sur 0 entrées",
                  sInfoFiltered: "(filtré de _MAX_ entrées au total)",
                  sLengthMenu: "Afficher _MENU_ entrées",
                  sLoadingRecords: "Chargement...",
                  sProcessing: "Traitement...",
                  sSearch: "Rechercher :",
                  sZeroRecords: "Aucun enregistrement correspondant trouvé",
                  oPaginate: {
                      sFirst: "Premier",
                      sLast: "Dernier",
                      sNext: "Suivant",
                      sPrevious: "Précédent"
                  }
              }
          });

          // Appel de la fonction setupFilters pour initialiser les filtres
          setupFilters();
      });
   </script>
</body>
{% endblock %}
